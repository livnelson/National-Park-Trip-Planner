"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(require("react")),_CheckboxNode=_interopRequireDefault(require("./CheckboxNode"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}function _possibleConstructorReturn(a,b){return b&&("object"===_typeof(b)||"function"==typeof b)?b:_assertThisInitialized(a)}function _getPrototypeOf(a){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)},_getPrototypeOf(a)}function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _inherits(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),b&&_setPrototypeOf(a,b)}function _setPrototypeOf(a,b){return _setPrototypeOf=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},_setPrototypeOf(a,b)}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}var CheckboxTree=/*#__PURE__*/function(a){function b(){var a,c;_classCallCheck(this,b);for(var d=arguments.length,e=Array(d),f=0;f<d;f++)e[f]=arguments[f];return c=_possibleConstructorReturn(this,(a=_getPrototypeOf(b)).call.apply(a,[this].concat(e))),_defineProperty(_assertThisInitialized(c),"state",{expanded:[]}),c}return _inherits(b,a),_createClass(b,[{key:"shouldComponentUpdate",// Prevent unecessary renders
value:function shouldComponentUpdate(a,b){// Check if values have changed
var c=a.checked.length!==this.props.checked.length,d=b.expanded.length!==this.state.expanded.length;return c||d}},{key:"formatNodes",value:function formatNodes(a){// Flatten all the nested arrays to a single array
// Add paths to each element so the depth and parents can be traced
var b=this.state.expanded,c=this.props.checked,d=[],e=function(a){var f=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null,g=!0,h=!1,i=void 0;try{for(var j,k,l=a[Symbol.iterator]();!(g=(j=l.next()).done);g=!0)if(k=j.value,k.id&&k.label){var m=f?"".concat(f,"/").concat(k.id):"/".concat(k.id);d.push({id:k.id,label:k.label,depth:m.split("/").length-2,checked:c.includes(k.id),expanded:b.includes(k.id),path:m,children:k.children}),k.children&&b.includes(k.id)&&e(k.children,m)}else console.error("Node: ".concat(k," is missing required attributes (id & label)"))}catch(a){h=!0,i=a}finally{try{g||null==l.return||l.return()}finally{if(h)throw i}}};return e(a),d}},{key:"generateCheckboxTree",value:function generateCheckboxTree(a){var b=this;// Generate the elements from the data
return _react.default.createElement(_react.default.Fragment,null,a.map(function(a){return _react.default.createElement(_CheckboxNode.default,_extends({},b.props,{key:a.id,id:a.id,label:a.label,depth:a.depth,checked:a.checked,expanded:a.expanded,onCheck:function onCheck(){return b.toggleNodeCheck(a)},onExpand:function onExpand(){return b.toggleExpandCheck(a)},hasChildren:!!a.children,indeterminate:function indeterminate(){return b.checkIndeterminate(a)}}))}))}},{key:"toggleNodeCheck",value:function toggleNodeCheck(a){// Run this when node is checked/unchecked
var b=_toConsumableArray(this.props.checked),c=!b.includes(a.id);// Check if parent node was checked and need to check all children (and childrens children)
if(c?!b.includes(a.id)&&b.push(a.id):b=b.filter(function(b){return b!==a.id}),a.children){var v=function(a){var d=!0,e=!1,f=void 0;try{for(var g,h=function(){var a=g.value;c?!b.includes(a.id)&&b.push(a.id):b=b.filter(function(b){return b!==a.id}),a.children&&v(a.children)},i=a[Symbol.iterator]();!(d=(g=i.next()).done);d=!0)h()}catch(a){e=!0,f=a}finally{try{d||null==i.return||i.return()}finally{if(e)throw f}}};v(a.children)}// This is run when a node is checked
// If all of the children are checked, also check parent(s)
if(c){var d=a.path,e=d.split("/").slice(1,-1).reverse(),f=this.props.nodes,g=this.formatNodes(f),h=!0,i=!1,j=void 0;try{for(var k,l=function(){var a=k.value,c=g.filter(function(b){return b.path.includes(a)});c.shift();var d=c.every(function(a){return b.includes(a.id)}),e=+a;!d||b.includes(e)||b.includes(e)||b.push(e)},m=e[Symbol.iterator]();!(h=(k=m.next()).done);h=!0)l()}catch(a){i=!0,j=a}finally{try{h||null==m.return||m.return()}finally{if(i)throw j}}}// This is run when a node is unchecked
// If one children is unchecked, also uncheck all parents
if(!c){var n=a.path,o=n.split("/").slice(1,-1),p=!0,q=!1,r=void 0;try{for(var s,t=function(){var a=s.value;b=b.filter(function(b){return b!==+a})},u=o[Symbol.iterator]();!(p=(s=u.next()).done);p=!0)t()}catch(a){q=!0,r=a}finally{try{p||null==u.return||u.return()}finally{if(q)throw r}}}this.props.onCheck(b)}},{key:"toggleExpandCheck",value:function toggleExpandCheck(a){// Run this when node is expanded/disbanded
var b=_toConsumableArray(this.state.expanded),c=+a.path.split("/").pop(),d=b.includes(c);// Also remove expand from all children
// Check if parent node was checked and need to check all children (and childrens children)
if(d?b=b.filter(function(a){return a!==c}):b.push(c),a.children){var e=function(a){var c=!0,d=!1,f=void 0;try{for(var g,h=function(){var a=g.value;b=b.filter(function(b){return b!==a.id}),a.children&&e(a.children)},i=a[Symbol.iterator]();!(c=(g=i.next()).done);c=!0)h()}catch(a){d=!0,f=a}finally{try{c||null==i.return||i.return()}finally{if(d)throw f}}};e(a.children)}this.setState({expanded:b})}},{key:"checkIndeterminate",value:function checkIndeterminate(a){if(a.children){var b=[],c=function(a){var d=!0,e=!1,f=void 0;try{for(var g,h,i=a[Symbol.iterator]();!(d=(g=i.next()).done);d=!0)h=g.value,b.push(h.id),h.children&&c(h.children)}catch(a){e=!0,f=a}finally{try{d||null==i.return||i.return()}finally{if(e)throw f}}};c(a.children);var d=this.props.checked,e=function(a,b){return b.every(function(b){return a.includes(b)})},f=e(d,b),g=d.some(function(a){return b.includes(a)});return!f&&g}}},{key:"render",value:function render(){var a=this.props.nodes,b=this.formatNodes(a);return _react.default.createElement(_react.default.Fragment,null,this.generateCheckboxTree(b))}}]),b}(_react.default.Component),_default=CheckboxTree;exports.default=_default;